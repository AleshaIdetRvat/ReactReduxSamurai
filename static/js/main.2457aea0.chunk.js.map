{"version":3,"sources":["components/api/api.js","redux/reducers/AuthReducer.js","redux/reducers/DialogsReducer.js","redux/reducers/ProfileReducer.js","redux/reducers/SidebarReducer.js","redux/reducers/UsersPageReducer.js","redux/reducers/AppReducer.js","components/api/newsApi.js","redux/reducers/NewsReducer.js","redux/reduxStore.js","components/utils/validators/validators.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Dialogs/Person/Person.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControl/MyTextarea.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/Preloader/Preloader.jsx","components/UsersPage/UsersPageItem/UsersPageItem.jsx","components/UsersPage/UsersPage.jsx","components/UsersPage/UsersPageAPIContainer.jsx","redux/reducers/selectors/users-selectors.js","components/UsersPage/UsersPageContainer.jsx","components/Profile/ProfHead/img/vk.svg","components/Profile/ProfHead/img/youtube.svg","components/Profile/ProfHead/img/facebook.svg","components/Profile/ProfHead/img/twitter.svg","components/Profile/ProfHead/img/github.svg","components/Profile/ProfHead/img/instagram.svg","components/Profile/ProfHead/img/upload.svg","components/common/FormsControl/FormikCheckbox.jsx","components/Profile/ProfHead/ProfHeadForm/ProfileHeadForm.jsx","components/Profile/ProfHead/ProfHeadFuncComponent.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/App.jsx","index.js"],"names":["axiosInstance","axios","create","withCredentials","baseURL","headers","securAPI","getCaptcha","a","get","res","data","url","Error","message","authAPI","Promise","resolve","reject","then","response","resultCode","messages","catch","reason","email","password","rememberMe","captcha","post","delete","profileAPI","uploadAvatar","photo","formData","FormData","append","put","photos","requestProfileData","userId","requestProfileStatus","updateProfInfo","profInfo","updateProfileStatus","status","usersAPI","requestUsersData","currentPage","pageSize","requestFollow","requestUnfollow","SET_USER_DATA","SET_CAPTCHA","SET_ERROR","SET_FETCHING","defaultState","login","isAuth","authError","isFetching","setFetching","flag","type","setCaptcha","setError","errorMsg","setAuthUserData","getMyDataThunkCreator","dispatch","myData","id","logoutThunkCreator","window","history","pushState","console","error","finally","AuthReducer","state","action","ADD_MESSAGE","UPDATE_NEW_MESSAGE","usersData","name","usersMsgData","text","myMsg","DialogsReducer","msg","newMessage","innerInput","newText","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","TOGGLE_SET_FETHING","SET_AVATAR","postsData","likes_count","userProfileData","AboutMe","contacts","lookingForAJob","LookingForAJobDescription","FullName","small","large","isMyProfile","setUserProfile","userData","setAvatar","setStatus","toggleSetFetching","ProfileReducer","newPost","length","filter","TOGGLE_IS_OPEN","isOpen","SidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","FETCHING_DATA","END_FETCHING_DATA","TOGGLE_FOLLOW_IN_PROGRESS","users","totalUsersCount","isFetchingData","followingInProgressState","followingInProgress","fetching","follow","unfollow","setUsers","followOrUnfollowFlow","method","UsersPageReducer","page","map","user","followed","INITIALIZE_SUCCES","initialize","AppReducer","increment","counter","newsAPI","getNews","options","params","q","from","to","sortBy","apiKey","request","articles","SET_NEWS","news","newsWithPrettyDate","publishedAt","Date","toLocaleDateString","day","month","year","split","join","payload","NewsReducer","reducerS","combineReducers","Messages","Profile","Sidebar","UsersPage","Auth","App","News","composeExtension","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reduxStore","createStore","applyMiddleware","thunk","maxLengthg","Header","className","useDispatch","isMenuOpen","useSelector","class","onClick","connect","props","UserId","activeClassName","Article","author","title","description","urlToImage","wrapper","document","createElement","innerHTML","strDescription","innerText","target","rel","href","src","alt","log","useState","setHasMore","useEffect","style","overflow","dataLength","next","hasMore","loader","textAlign","endMessage","index","key","Person","personId","div","Name","Message","Text","MyTextarea","touched","isHorizontal","isInput","hasError","required","value","maxLenght20","NewMsgReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsData","addMsg","usersElements","usersMsgElements","newMsgFormData","withAuthRedirect","Component","withAuthRedirectComponent","myId","Preloader","loading","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","React","memo","UsersPageItem","fullname","location","avatar","contry","city","disabled","selectPage","unfollowThunkCreator","followThunkCreator","some","UsersPageAPIContainer","pageNum","setCurrentPage","getUsersThuckCreator","this","getUsersSelector","getUsersPageSizeSelector","getTotalUsersCountSelector","getUsersPageCurrentPage","getUsersPageFetchingState","getUsersPageFollowingInProgressStatee","mapDispatchToProps","requestData","items","Checkbox","field","checked","FormContacts","contactClassName","values","errors","handleChange","handleBlur","Object","keys","forForm","icon","photosIcons","link","onChange","onBlur","aboutMe","lookingForAJobDescription","fullName","onSave","URL","validationSchema","yup","shape","max","vk","matches","youtube","facebook","twitter","github","instagram","initialValues","mainLink","website","validateOnBlur","newValues","isValid","ProfileStatus","updateUserStatus","editMode","setEditMode","toggleStatusEditMode","onDoubleClick","autoFocus","onFocus","event","select","e","currentTarget","Contact","children","draggable","substr","Contacts","contactChild","ProfileContacts","ProfileHeadInfo","updateAvatar","ProfileHeadInfoEdit","ProfHeadFuncComponent","files","uploadIcon","ProfileContainer","getUserPersonDataThunkCreator","match","getUserStatus","refreshProfile","prevProps","updateAvatarTC","profileData","getStatus","withRouter","LoginForm","onSubmitLogin","captchaUrl","typeError","min","remeberMe","dirty","loginThunkCreator","resCode","initialized","initializeApp","prom","all","path","render","exact","DialogsContainer","UsersPageContainer","store","getElementById"],"mappings":"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","file":"static/js/main.2457aea0.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"cebb09d0-fe2a-4f47-8835-31a231006854\",\r\n    },\r\n})\r\n\r\nexport const securAPI = {\r\n    getCaptcha: async () => {\r\n        try {\r\n            const res = await axiosInstance.get(\"security/get-captcha-url\")\r\n            return res.data.url\r\n        } catch (error) {\r\n            throw new Error(error.message)\r\n        }\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    requstMyData: () => {\r\n        return new Promise((resolve, reject) => {\r\n            axiosInstance\r\n                .get(`auth/me`)\r\n                .then((response) => {\r\n                    if (!response.data.resultCode) {\r\n                        resolve(response.data.data)\r\n                    } else {\r\n                        reject(response.data.messages[0])\r\n                    }\r\n                })\r\n                .catch((reason) => reject(reason))\r\n        })\r\n    },\r\n\r\n    login: (email, password, rememberMe, captcha = null) => {\r\n        return new Promise((resolve, reject) => {\r\n            axiosInstance\r\n                .post(`auth/login`, { email, password, rememberMe, captcha })\r\n                .then((response) => {\r\n                    if (response.data.resultCode === 0) {\r\n                        resolve(response.data.data)\r\n                    } else {\r\n                        reject([\r\n                            response.data.resultCode,\r\n                            response.data.messages[0],\r\n                        ])\r\n                    }\r\n                })\r\n                .catch((reason) => reject(reason))\r\n        })\r\n    },\r\n    logout: () => {\r\n        return new Promise((resolve, reject) => {\r\n            axiosInstance\r\n                .delete(`auth/login`)\r\n                .then((response) => {\r\n                    if (!response.data.resultCode) {\r\n                        resolve(response.data.data)\r\n                    } else {\r\n                        reject(response.data.messages[0])\r\n                    }\r\n                })\r\n                .catch((reason) => reject(reason))\r\n        })\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    uploadAvatar: async (photo) => {\r\n        const formData = new FormData()\r\n\r\n        formData.append(\"image\", photo)\r\n\r\n        try {\r\n            const response = await axiosInstance.put(\r\n                `profile/photo`,\r\n                formData,\r\n                {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            )\r\n\r\n            if (response.data.resultCode === 0) {\r\n                return response.data.data.photos\r\n            } else {\r\n                throw new Error(response.data.resultCode)\r\n            }\r\n        } catch (error) {}\r\n    },\r\n\r\n    requestProfileData: async (userId) => {\r\n        const response = await axiosInstance.get(`profile/${userId || 2}`)\r\n        return response.data\r\n    },\r\n\r\n    requestProfileStatus: async (userId) => {\r\n        const response = await axiosInstance.get(\r\n            `profile/status/${userId || 2}`\r\n        )\r\n        return response.data\r\n    },\r\n\r\n    updateProfInfo: async (profInfo) => {\r\n        try {\r\n            const response = await axiosInstance.put(\"profile\", profInfo)\r\n            if (response.data.resultCode !== 0) {\r\n                throw new Error(\"some error occured\")\r\n            }\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    },\r\n\r\n    updateProfileStatus: (status) => {\r\n        return new Promise((resolve, reject) => {\r\n            //debugger;\r\n            axiosInstance\r\n                .put(`profile/status`, { status })\r\n                .then((response) => {\r\n                    if (!response.data.resultCode) {\r\n                        resolve(response.data.data)\r\n                    }\r\n                })\r\n                .catch((reason) => reject(reason))\r\n        })\r\n    },\r\n}\r\n\r\nexport const usersAPI = {\r\n    //\r\n    requestUsersData: async (currentPage = 1, pageSize = 6) => {\r\n        const response = await axiosInstance.get(\r\n            `users?page=${currentPage}&count=${pageSize}`\r\n        )\r\n        return response.data\r\n    },\r\n\r\n    requestFollow: (userId) => {\r\n        return new Promise((resolve, reject) => {\r\n            //debugger;\r\n            axiosInstance\r\n                .post(`follow/${userId}`, {})\r\n                .then((response) => {\r\n                    //debugger;\r\n                    if (!response.data.resultCode) {\r\n                        resolve(response.data.data)\r\n                    }\r\n                })\r\n                .catch((reason) => reject(reason))\r\n        })\r\n    },\r\n\r\n    requestUnfollow: (userId) => {\r\n        return new Promise((resolve, reject) => {\r\n            axiosInstance.delete(`follow/${userId}`).then((response) => {\r\n                if (response.data.resultCode !== 0) {\r\n                    resolve(response.data.data)\r\n                } else {\r\n                    reject(\"My_Error\")\r\n                }\r\n            })\r\n        })\r\n    },\r\n}\r\n\r\n// export const\r\n","import { authAPI, securAPI } from \"../../components/api/api\"\r\nconst SET_USER_DATA = \"authreducer/SET_USER_DATA\"\r\nconst SET_CAPTCHA = \"authreducer/SET_CAPTCHA\"\r\nconst SET_ERROR = \"authreducer/SET_ERROR\"\r\nconst SET_FETCHING = \"authreducer/SET_FETCHING\"\r\n\r\nconst defaultState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captcha: null,\r\n    authError: null,\r\n    isFetching: false,\r\n}\r\n\r\nconst AuthReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.data }\r\n        case SET_CAPTCHA:\r\n            return { ...state, captcha: action.url }\r\n        case SET_ERROR:\r\n            return { ...state, authError: action.errorMsg }\r\n        case SET_FETCHING:\r\n            return { ...state, isFetching: action.flag }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setFetching = (flag) => ({\r\n    type: SET_FETCHING,\r\n    flag,\r\n})\r\n\r\nconst setCaptcha = (url) => ({\r\n    type: SET_CAPTCHA,\r\n    url,\r\n})\r\n\r\nconst setError = (errorMsg) => ({\r\n    type: SET_ERROR,\r\n    errorMsg,\r\n})\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    const url = await securAPI.getCaptcha()\r\n    dispatch(setCaptcha(url))\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth = true) => ({\r\n    type: SET_USER_DATA,\r\n    data: { userId, email, login, isAuth },\r\n})\r\n\r\nexport const getMyDataThunkCreator = () => async (dispatch) => {\r\n    try {\r\n        const myData = await authAPI.requstMyData()\r\n        dispatch(setAuthUserData(myData.id, myData.email, myData.login))\r\n    } catch (error) {\r\n        dispatch(setError(error.message))\r\n    }\r\n}\r\n\r\nexport const loginThunkCreator =\r\n    (email, password, rememberMe, captcha) => async (dispatch) => {\r\n        dispatch(setFetching(true))\r\n\r\n        dispatch(setError(null))\r\n\r\n        try {\r\n            await authAPI.login(email, password, rememberMe, captcha)\r\n\r\n            dispatch(getMyDataThunkCreator())\r\n        } catch (error) {\r\n            const [resCode, errorMsg] = error\r\n            dispatch(setError(errorMsg))\r\n            if (resCode === 10) {\r\n                dispatch(getCaptcha())\r\n            }\r\n        }\r\n\r\n        dispatch(setFetching(false))\r\n    }\r\n\r\nexport const logoutThunkCreator = () => (dispatch) => {\r\n    dispatch(setFetching(true))\r\n    authAPI\r\n        .logout()\r\n        .then((data) => {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n            window.history.pushState(\"\", \"\", \"#/login\")\r\n        })\r\n        .catch((reason) => {\r\n            console.error(reason)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setFetching(false))\r\n        })\r\n}\r\n\r\nexport default AuthReducer\r\n","export const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nexport const UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\n\r\nconst defaultState = {\r\n    usersData: [\r\n        { name: \"Ivan Ivanov\", id: \"1\" },\r\n        { name: \"Petya Kozlov\", id: \"2\" },\r\n        { name: \"Nina Shpagina\", id: \"3\" },\r\n    ],\r\n\r\n    usersMsgData: [\r\n        { text: \"tempText\", id: \"1\", myMsg: true },\r\n        { text: \"tempText\", id: \"2\", myMsg: false },\r\n        { text: \"tempText\", id: \"3\", myMsg: false },\r\n        { text: \"tempText\", id: \"4\", myMsg: false },\r\n        { text: \"tempText\", id: \"5\", myMsg: true },\r\n        { text: \"tempText\", id: \"6\", myMsg: false },\r\n        { text: \"tempText\", id: \"7\", myMsg: true },\r\n        { text: \"tempText\", id: \"8\", myMsg: false },\r\n    ],\r\n};\r\n\r\nconst DialogsReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            if (action.msg != \"\") {\r\n                const newMessage = {\r\n                    text: action.msg,\r\n                    id: \"4\",\r\n                    myMsg: true,\r\n                };\r\n                return {\r\n                    ...state,\r\n                    usersMsgData: [...state.usersMsgData, newMessage],\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case UPDATE_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                innerInput: action.newText,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addMsg = (msg) => ({ type: ADD_MESSAGE, msg });\r\n\r\nexport default DialogsReducer;\r\n","import { profileAPI } from \"../../components/api/api\"\r\n\r\nconst ADD_POST = \"profile/ADD-POST\"\r\nconst DELETE_POST = \"profile/DELETE-POST\"\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\"\r\nconst SET_STATUS = \"profile/SET_STATUS\"\r\nconst TOGGLE_SET_FETHING = \"profile/TOGGLE_SET_FETHING\"\r\nconst SET_AVATAR = \"profile/SET_AVATAR\"\r\n\r\nconst defaultState = {\r\n    postsData: [\r\n        { id: 1, likes_count: \"34\", message: \"Hello everybody\" },\r\n        { id: 2, likes_count: \"5\", message: \"How are they?\" },\r\n    ],\r\n    userProfileData: {\r\n        AboutMe: \"\",\r\n        contacts: null,\r\n        lookingForAJob: false,\r\n        LookingForAJobDescription: \"\",\r\n        FullName: \"\",\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\",\r\n        },\r\n        isMyProfile: false,\r\n    },\r\n    isFetching: true,\r\n    status: \"\",\r\n}\r\n\r\nexport const ProfileReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_AVATAR:\r\n            return {\r\n                ...state,\r\n                photos: action.photos,\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfileData: {\r\n                    ...state.userProfileData,\r\n                    ...action.userData,\r\n                },\r\n            }\r\n        case TOGGLE_SET_FETHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case ADD_POST:\r\n            if (action.newPost !== \"\") {\r\n                const post = {\r\n                    likes_count: \"0\",\r\n                    message: action.newPost,\r\n                    id: state.postsData.length + 1,\r\n                }\r\n                return {\r\n                    ...state,\r\n                    postsData: [...state.postsData, post],\r\n                }\r\n            }\r\n            return state\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(\r\n                    (post) => post.id !== action.id\r\n                ),\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPost) => ({\r\n    type: ADD_POST,\r\n    newPost,\r\n})\r\nexport const deletePost = (id) => ({\r\n    type: DELETE_POST,\r\n    id,\r\n})\r\n\r\nexport const setUserProfile = (userData) => ({\r\n    type: SET_USER_PROFILE,\r\n    userData,\r\n})\r\nexport const setAvatar = (photos) => ({\r\n    type: SET_AVATAR,\r\n    photos,\r\n})\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status,\r\n})\r\n\r\nexport const toggleSetFetching = (isFetching) => ({\r\n    type: TOGGLE_SET_FETHING,\r\n    isFetching,\r\n})\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleSetFetching(true))\r\n\r\n    try {\r\n        const getStatus = profileAPI.requestProfileStatus\r\n        const status = await getStatus(userId)\r\n        dispatch(setStatus(status))\r\n        dispatch(toggleSetFetching(false))\r\n    } catch (error) {}\r\n}\r\n\r\nexport const updateAvatarTC = (photo) => async (dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleSetFetching(true))\r\n    try {\r\n        const photos = await profileAPI.uploadAvatar(photo)\r\n        await dispatch(setAvatar(photos))\r\n        dispatch(toggleSetFetching(false))\r\n    } catch (error) {\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const updateProfInfo = (profInfo, userId) => async (dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleSetFetching(true))\r\n\r\n    try {\r\n        await profileAPI.updateProfInfo({ ...profInfo, userId })\r\n        await dispatch(setUserProfile(profInfo))\r\n    } catch (error) {\r\n        throw new Error()\r\n    } finally {\r\n        dispatch(toggleSetFetching(false))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleSetFetching(true))\r\n    try {\r\n        await profileAPI.updateProfileStatus(status)\r\n        dispatch(setStatus(status))\r\n        dispatch(toggleSetFetching(false))\r\n    } catch (error) {}\r\n}\r\n\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\nexport const getUserPersonDataThunkCreator = (userId) => async (dispatch) => {\r\n    // debugger;\r\n    dispatch(toggleSetFetching(true))\r\n\r\n    try {\r\n        const profileData = await profileAPI.requestProfileData(userId)\r\n        dispatch(setUserProfile(profileData))\r\n        dispatch(toggleSetFetching(false))\r\n    } catch (error) {}\r\n}\r\n\r\nexport const initializeProfile = () => async (dispatch) => {\r\n    // const prom = dispatch(getMyDataThunkCreator())\r\n    // await Promise.all([prom])\r\n    // dispatch(initializeSucces())\r\n}\r\n\r\nexport default ProfileReducer\r\n","const TOGGLE_IS_OPEN = \"TOGGLE_IS_OPEN\"\r\nconst defaultState = {\r\n    isOpen: false,\r\n}\r\n\r\nconst SidebarReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_OPEN:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen,\r\n            }\r\n            break\r\n\r\n        default:\r\n            break\r\n    }\r\n    return state\r\n}\r\nexport const toggleOpenMenu = (isOpen) => ({ type: TOGGLE_IS_OPEN, isOpen })\r\n\r\nexport default SidebarReducer\r\n","import { usersAPI } from \"../../components/api/api\"\r\n\r\nconst FOLLOW = \"userPage/FOLLOW\"\r\nconst UNFOLLOW = \"userPage/UNFOLLOW\"\r\nconst SET_USERS = \"userPage/SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"userPage/SET_CURRENT_PAGE\"\r\nconst FETCHING_DATA = \"userPage/FETCHING_DATA\"\r\nconst END_FETCHING_DATA = \"userPage/END_FETCHING_DATA\"\r\nconst TOGGLE_FOLLOW_IN_PROGRESS = \"userPage/TOGGLE_FOLLOW_IN_PROGRESS\"\r\n\r\nconst defaultState = {\r\n    users: [],\r\n    pageSize: 6,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetchingData: true,\r\n    followingInProgressState: [],\r\n}\r\n\r\nconst UsersPageReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgressState: action.isFetching\r\n                    ? [...state.followingInProgressState, action.userId]\r\n                    : state.followingInProgressState.filter(\r\n                          (userId) => userId != action.userId\r\n                      ),\r\n            }\r\n        case FETCHING_DATA:\r\n            return {\r\n                ...state,\r\n                isFetchingData: true,\r\n            }\r\n        case END_FETCHING_DATA:\r\n            return {\r\n                ...state,\r\n                isFetchingData: false,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) =>\r\n                    action.userId === user.id\r\n                        ? { ...user, followed: true }\r\n                        : user\r\n                ),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) =>\r\n                    action.userId === user.id\r\n                        ? { ...user, followed: false }\r\n                        : user\r\n                ),\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOW_IN_PROGRESS,\r\n    userId,\r\n    isFetching,\r\n})\r\n\r\nexport const fetching = () => ({\r\n    type: FETCHING_DATA,\r\n})\r\n\r\nexport const endFetching = () => ({\r\n    type: END_FETCHING_DATA,\r\n})\r\n\r\nexport const setCurrentPage = (page) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    page: page,\r\n})\r\n\r\nexport const follow = (userId) => ({\r\n    type: FOLLOW,\r\n    userId: userId,\r\n})\r\n\r\nexport const unfollow = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId: userId,\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users: users,\r\n})\r\n\r\nexport const getUsersThuckCreator =\r\n    (currentPage, pageSize) => async (dispatch) => {\r\n        dispatch(fetching())\r\n\r\n        const requestData = await usersAPI.requestUsersData(\r\n            currentPage,\r\n            pageSize\r\n        )\r\n\r\n        await dispatch(\r\n            setUsers(\r\n                requestData.items.map((user) => {\r\n                    return {\r\n                        id: user.id,\r\n                        fullname: user.name,\r\n                        location: {\r\n                            contry: \"Russia\",\r\n                            city: \"Moscow\",\r\n                        },\r\n                        status: user.status,\r\n                        followed: user.followed,\r\n                        avatar: user.photos.small,\r\n                    }\r\n                })\r\n            )\r\n        )\r\n\r\n        dispatch(endFetching())\r\n    }\r\n\r\nconst followOrUnfollowFlow = async (userId, method, dispatch) => {\r\n    dispatch(followingInProgress(true, userId))\r\n\r\n    try {\r\n        if (method === \"follow\") {\r\n            await usersAPI.requestFollow(userId)\r\n            dispatch(follow(userId))\r\n        } else if (method === \"unfollow\") {\r\n            await usersAPI.requestUnfollow(userId)\r\n            dispatch(unfollow(userId))\r\n        }\r\n\r\n        dispatch(followingInProgress(false, userId))\r\n    } catch (error) {}\r\n}\r\n\r\nexport const followThunkCreator = (userId) => (dispatch) => {\r\n    //debugger;\r\n    followOrUnfollowFlow(userId, \"follow\", dispatch)\r\n}\r\n\r\nexport const unfollowThunkCreator = (userId) => (dispatch) => {\r\n    followOrUnfollowFlow(userId, \"unfollow\", dispatch)\r\n}\r\n\r\nexport default UsersPageReducer\r\n","import { getMyDataThunkCreator } from \"./AuthReducer\"\r\n\r\nconst INITIALIZE_SUCCES = \"INITIALIZE_SUCCES\"\r\n\r\nconst defaultState = {\r\n    initialize: false,\r\n}\r\n\r\nconst AppReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE_SUCCES:\r\n            return { ...state, initialize: true }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSucces = () => ({\r\n    type: INITIALIZE_SUCCES,\r\n})\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    const prom = dispatch(getMyDataThunkCreator())\r\n\r\n    await Promise.all([prom])\r\n\r\n    dispatch(initializeSucces())\r\n}\r\n\r\nexport default AppReducer\r\n","import axios from \"axios\"\r\n\r\nconst API_KEY = \"fdb221eb5b83436ca4e2d455f845a5d4\"\r\n\r\nconst increment = (() => {\r\n    let counter = 0\r\n    return () => ++counter\r\n})()\r\n\r\nexport const newsAPI = {\r\n    getNews: async () => {\r\n        const options = {\r\n            method: \"GET\",\r\n            url: \"https://newsapi.org/v2/everything\",\r\n            params: {\r\n                q: \"apple\",\r\n                from: \"2021-11-06\",\r\n                to: \"2021-11-06\",\r\n                sortBy: \"relevancy\",\r\n                apiKey: API_KEY,\r\n                page: increment(),\r\n                pageSize: \"10\",\r\n            },\r\n        }\r\n        try {\r\n            const response = await axios.request(options)\r\n\r\n            return response.data.articles\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    },\r\n}\r\n","import { newsAPI } from \"../../components/api/newsApi\"\r\nexport const SET_NEWS = \"SET_NEWS\"\r\n\r\nconst defaultState = {\r\n    news: [],\r\n}\r\n\r\nconst NewsReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_NEWS:\r\n            return {\r\n                ...state,\r\n                news: [...state.news, ...action.payload],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst setNews = (payload) => ({ type: SET_NEWS, payload })\r\n\r\nexport const getNews = () => async (dispatch) => {\r\n    const news = await newsAPI.getNews()\r\n    if (news && news.length !== 0) {\r\n        const newsWithPrettyDate = news.map((post) => ({\r\n            ...post,\r\n            publishedAt: new Date(post.publishedAt)\r\n                .toLocaleDateString(\"en-GB\", {\r\n                    day: \"numeric\",\r\n                    month: \"long\",\r\n                    year: \"numeric\",\r\n                })\r\n                .split(\" \")\r\n                .join(\"-\"),\r\n        }))\r\n\r\n        dispatch(setNews(newsWithPrettyDate))\r\n    }\r\n}\r\n\r\nexport default NewsReducer\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport AuthReducer from \"./reducers/AuthReducer\"\r\nimport DialogsReducer from \"./reducers/DialogsReducer\"\r\nimport ProfileReducer from \"./reducers/ProfileReducer\"\r\nimport SidebarReducer from \"./reducers/SidebarReducer\"\r\nimport UsersPageReducer from \"./reducers/UsersPageReducer\"\r\nimport thunk from \"redux-thunk\"\r\nimport AppReducer from \"./reducers/AppReducer\"\r\nimport NewsReducer from \"./reducers/NewsReducer\"\r\n\r\nconst reducerS = combineReducers({\r\n    Messages: DialogsReducer,\r\n    Profile: ProfileReducer,\r\n    Sidebar: SidebarReducer,\r\n    UsersPage: UsersPageReducer,\r\n    Auth: AuthReducer,\r\n    App: AppReducer,\r\n    News: NewsReducer,\r\n})\r\n\r\nconst composeExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst reduxStore = createStore(\r\n    reducerS,\r\n    composeExtension(applyMiddleware(thunk))\r\n)\r\n\r\nwindow.reduxStore = reduxStore\r\n\r\nexport default reduxStore\r\n","export const required = (value) => {\r\n    if (value) return;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLenghtCreator = (maxLengthg) => (value) => {\r\n    if (value && value.length > maxLengthg) return `Max lenght is ${maxLengthg} symbols`;\r\n    return undefined;\r\n};\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { toggleOpenMenu } from \"../../redux/reducers/SidebarReducer\"\r\nimport \"./Header.scss\"\r\n\r\nconst Header = ({ isAuth, login, className, logoutThunkCreator }) => {\r\n    const dispatch = useDispatch()\r\n    const onClick = () => dispatch(toggleOpenMenu())\r\n    const isMenuOpen = useSelector((state) => state.Sidebar.isOpen)\r\n\r\n    return (\r\n        <header className={`header ${className}`}>\r\n            <div className='header__body'>\r\n                <div className='header__grid'>\r\n                    <div className='header__logo header-logo'>\r\n                        <span className='header-logo__text'>\r\n                            <i className='header-logo__letter1'>S</i>\r\n                            <i className='header-logo__letter2'>N</i>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className='header__login header-login'>\r\n                        <div className='header-login__body'>\r\n                            <NavLink to='/login'>{isAuth ? login : \"\"}</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    {isAuth && (\r\n                        <div class='logout'>\r\n                            <button\r\n                                class='login-btn'\r\n                                onClick={logoutThunkCreator}\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    <button\r\n                        onClick={onClick}\r\n                        className={`login-btn__menu-burger menu-burger ${\r\n                            isMenuOpen ? \"menu-burger--open\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className={`menu-burger__body `}>\r\n                            <div className='menu-burger__middle-stick'></div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { logoutThunkCreator } from \"../../redux/reducers/AuthReducer\"\r\nimport Header from \"./Header\"\r\n\r\nconst HeaderContainer = (props) => {\r\n    return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutThunkCreator })(HeaderContainer)\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { connect } from \"react-redux\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./Sidebar.scss\"\r\n\r\nconst Sidebar = (props) => {\r\n    const isMenuOpen = useSelector((state) => state.Sidebar.isOpen)\r\n\r\n    return (\r\n        <nav class={`sidebar ${isMenuOpen ? \"menu--open\" : \"\"}`}>\r\n            <div class='sidebar__body'>\r\n                <ul class='sidebar__grid'>\r\n                    <NavLink\r\n                        activeClassName='selected'\r\n                        to={`/profile/${props.UserId}`}\r\n                        className='sidebar__item'\r\n                    >\r\n                        <span>Profile</span>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        activeClassName='selected'\r\n                        to='/dialogs'\r\n                        className='sidebar__item'\r\n                    >\r\n                        <span>Messages</span>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        activeClassName='selected'\r\n                        to='/users'\r\n                        className='sidebar__item'\r\n                    >\r\n                        <span>Find Users</span>\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName='selected'\r\n                        to='/news'\r\n                        className='sidebar__item'\r\n                    >\r\n                        <span>News</span>\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UserId: state.Auth.userId,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Sidebar)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nimport { getNews } from \"../../redux/reducers/NewsReducer\"\r\nimport \"./News.scss\"\r\n\r\nconst Article = (props) => {\r\n    const { author, title, description, urlToImage, publishedAt, url } = props\r\n\r\n    const wrapper = document.createElement(\"div\")\r\n    wrapper.innerHTML = description\r\n    const strDescription = wrapper.innerText\r\n\r\n    return (\r\n        <article className='news-article'>\r\n            <div className='news-article__body'>\r\n                <div className='news-article__row'>\r\n                    <div className='news-article__content article-content'>\r\n                        <div className='article-content__grid'>\r\n                            <h2 className='article-content__title'>{title}</h2>\r\n                            <div className='article-content__desc'>\r\n                                {strDescription},{\" \"}\r\n                                <a\r\n                                    className='article-content__desc'\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                    href={url}\r\n                                >\r\n                                    See more\r\n                                </a>\r\n                            </div>\r\n                            <div className='article-content__author'>\r\n                                Author: <i>{author}</i>\r\n                            </div>\r\n                            <div className='article-content__date'>\r\n                                {publishedAt}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='news-article__image-container'>\r\n                        <img\r\n                            className='news-article__image'\r\n                            src={urlToImage}\r\n                            alt='news-image'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nconst News = () => {\r\n    const news = useSelector(({ News }) => News.news)\r\n    const dispatch = useDispatch()\r\n    console.log(news)\r\n    const [hasMore, setHasMore] = useState(true)\r\n\r\n    useEffect(() => {\r\n        dispatch(getNews())\r\n    }, [])\r\n\r\n    const fetchMoreData = () => {\r\n        if (news.length >= 1000) {\r\n            setHasMore(false)\r\n            return\r\n        }\r\n\r\n        dispatch(getNews())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='news'>\r\n                <h1 className='news__title'>News</h1>\r\n\r\n                <InfiniteScroll\r\n                    className='news__container'\r\n                    style={{ overflow: \"unset\" }}\r\n                    dataLength={news.length}\r\n                    next={fetchMoreData}\r\n                    hasMore={true}\r\n                    loader={<h4 style={{ textAlign: \"center\" }}>Loading...</h4>}\r\n                    endMessage={\r\n                        <p style={{ textAlign: \"center\" }}>\r\n                            <b>Yay! You have seen it all</b>\r\n                        </p>\r\n                    }\r\n                >\r\n                    {news.map((post, index) => (\r\n                        <Article {...post} key={index} />\r\n                    ))}\r\n                </InfiniteScroll>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Person.scss'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <NavLink to={\"/dialogs/\" + props.personId}>\r\n            <div class=\"dial-sidebar__people people-dialog\">\r\n                <div div class=\"people-dialog__icon\" >\r\n                </div>\r\n\r\n                <div class=\"people-dialog__name\">\r\n                    <span>{props.Name}</span>\r\n                </div>\r\n            </div >\r\n        </NavLink >\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\n\r\nimport './Message.scss'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div class={props.myMsg\r\n            ? \"messageS__item message my-message\"\r\n            : \"messageS__item message\"} >\r\n\r\n            <div class=\"message__body\">\r\n                <div class=\"message__text\">{props.Text}</div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\"\r\nimport \"./MyTextarea.scss\"\r\n\r\nconst MyTextarea = ({\r\n    touched,\r\n    error,\r\n    isHorizontal = false,\r\n    isInput = false,\r\n    ...props\r\n}) => {\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div class='my-textarea'>\r\n            {isInput ? <input {...props} /> : <textarea {...props} />}\r\n\r\n            {hasError && (\r\n                <span\r\n                    class={`my-textarea__error-${\r\n                        isHorizontal ? \"horizontal\" : \"vertical\"\r\n                    }`}\r\n                >\r\n                    {error}\r\n                </span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTextarea\r\n","import React from \"react\"\r\nimport Person from \"./Person/Person\"\r\nimport \"./Dialogs.scss\"\r\nimport Message from \"./Message/Message\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport MyTextarea from \"../common/FormsControl/MyTextarea\"\r\nimport { required, maxLenghtCreator } from \"../utils/validators/validators\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst maxLenght20 = maxLenghtCreator(20) //оалдыва ПРолиофыдлва\r\n\r\nconst NewMsgForm = ({ onSubmit, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} class='send__grid'>\r\n            <Field\r\n                isInput={true}\r\n                component={MyTextarea}\r\n                validate={[required, maxLenght20]}\r\n                name='message'\r\n                type='text'\r\n                placeholder='Your message'\r\n                class='send__input'\r\n            />\r\n            <button class='send__btn'>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMsgReduxForm = reduxForm({ form: \"newMsg\" })(NewMsgForm)\r\n\r\nconst Dialogs = ({ dialogsData, addMsg }) => {\r\n    const onSubmitMsg = (newMsgFormData) => {\r\n        addMsg(newMsgFormData.message)\r\n    }\r\n\r\n    let usersElements = dialogsData.usersData.map((user) => (\r\n        <Person Name={user.name} personId={user.id} key={user.id} />\r\n    ))\r\n\r\n    let usersMsgElements = dialogsData.usersMsgData.map((msg) => (\r\n        <Message Text={msg.text} myMsg={msg.myMsg} key={msg.id} />\r\n    ))\r\n\r\n    return (\r\n        <div class='dialogs'>\r\n            <div class='dialogs__body'>\r\n                <div class='dialogs__grid'>\r\n                    <div class='dialogs__sidebar dial-sidebar'>\r\n                        <div class='dial-sidebar__grid'>{usersElements}</div>\r\n                    </div>\r\n\r\n                    <div class='dialogs__chat chat'>\r\n                        <div class='chat__body'>\r\n                            <div class='chat__messageS messageS'>\r\n                                <div class='messageS__grid'>\r\n                                    {usersMsgElements}\r\n                                    {usersMsgElements}\r\n                                    {usersMsgElements}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class='chat__send send'>\r\n                                <NewMsgReduxForm onSubmit={onSubmitMsg} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDialogs.propTypes = {\r\n    dialogsData: PropTypes.shape({\r\n        usersData: PropTypes.array,\r\n        usersMsgData: PropTypes.array,\r\n        innerInput: PropTypes.string,\r\n    }).isRequired,\r\n}\r\n\r\nexport default Dialogs\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    let withAuthRedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    const mapStateToProps = (state) => ({\r\n        isAuth: state.Auth.isAuth,\r\n        myId: state.Auth.userId,\r\n    });\r\n\r\n    withAuthRedirectComponent = connect(mapStateToProps, {})(withAuthRedirectComponent);\r\n\r\n    return withAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","import Dialogs from \"./Dialogs\"\r\nimport { addMsg } from \"../../redux/reducers/DialogsReducer\"\r\nimport { connect } from \"react-redux\"\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogsData: state.Messages,\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, { addMsg }), withAuthRedirect)(Dialogs)\r\n","import React from \"react\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./Preloader.scss\"\r\n\r\nconst Preloader = ({ loading }) => {\r\n    console.log(\"loading: \", loading)\r\n    return (\r\n        <CSSTransition\r\n            in={loading}\r\n            timeout={500}\r\n            classNames='preloader'\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <div className='preloader'>\r\n                <div className='preloader__wall'>\r\n                    <div className='preloader__spin-box' />\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\nexport default React.memo(Preloader)\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./UsersPageItem.scss\";\r\nconst UsersPageItem = ({\r\n    fullname,\r\n    location,\r\n    status,\r\n    followed,\r\n    follow,\r\n    unfollow,\r\n    avatar,\r\n    id,\r\n    followingInProgressState,\r\n}) => {\r\n    return (\r\n        <div class=\"users-page__item users-page-item\">\r\n            <div class=\"users-page-item__body\">\r\n                <div class=\"users-page-item__grid\">\r\n                    <NavLink class=\"users-page-item__avatar\" to={`/profile/${id}`}>\r\n                        {avatar ? <img src={avatar} /> : \"\"}\r\n                    </NavLink>\r\n\r\n                    <div class=\"users-page-item__status status-grid\">\r\n                        <div class=\"status-grid__name\">{fullname}</div>\r\n                        <div class=\"status-grid__contry\">{location.contry},</div>\r\n                        <div class=\"status-grid__city\">{location.city}</div>\r\n                        <div class=\"status-grid__myself\">{status}</div>\r\n                    </div>\r\n\r\n                    <div class=\"users-page-item__follow\">\r\n                        {followed ? (\r\n                            <button\r\n                                disabled={followingInProgressState()}\r\n                                onClick={unfollow}\r\n                                class=\"users-page-item__follow-btn unfollow-btn\"\r\n                            >\r\n                                unfollow\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                disabled={followingInProgressState()}\r\n                                onClick={follow}\r\n                                class=\"users-page-item__follow-btn\"\r\n                            >\r\n                                follow\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersPageItem;\r\n","import React from \"react\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport \"./UsersPage.scss\"\r\nimport UsersPageItem from \"./UsersPageItem/UsersPageItem\"\r\n\r\nconst UsersPage = ({\r\n    isFetching,\r\n    users,\r\n    currentPage,\r\n    selectPage,\r\n    followingInProgressState,\r\n    unfollowThunkCreator,\r\n    followThunkCreator,\r\n    isAuth,\r\n}) => {\r\n    return (\r\n        <>\r\n            <div class='users-page'>\r\n                <Preloader loading={isFetching} />\r\n                <div class='users-page__grid'>\r\n                    <ul class='users-page__select-page-btns select-page-btns'>\r\n                        {currentPage === 1 ? (\r\n                            \"\"\r\n                        ) : currentPage === 2 ? (\r\n                            <li\r\n                                onClick={() => selectPage(-1)}\r\n                                className='select-page-btns__page-num'\r\n                            >\r\n                                {currentPage - 1}\r\n                            </li>\r\n                        ) : (\r\n                            <>\r\n                                <li\r\n                                    onClick={() => selectPage(-2)}\r\n                                    className='select-page-btns__page-num'\r\n                                >\r\n                                    {currentPage - 2}\r\n                                </li>\r\n                                <li\r\n                                    onClick={() => selectPage(-1)}\r\n                                    className='select-page-btns__page-num'\r\n                                >\r\n                                    {currentPage - 1}\r\n                                </li>\r\n                            </>\r\n                        )}\r\n                        <li className='select-page-btns__page-num selected-page'>\r\n                            {currentPage}\r\n                        </li>\r\n                        <li\r\n                            onClick={() => selectPage(1)}\r\n                            className='select-page-btns__page-num'\r\n                        >\r\n                            {currentPage + 1}\r\n                        </li>\r\n                        <li\r\n                            onClick={() => selectPage(2)}\r\n                            className='select-page-btns__page-num'\r\n                        >\r\n                            {currentPage + 2}\r\n                        </li>\r\n                        {currentPage === 1 ? (\r\n                            <>\r\n                                <li\r\n                                    onClick={() => selectPage(3)}\r\n                                    className='select-page-btns__page-num'\r\n                                >\r\n                                    {currentPage + 3}\r\n                                </li>\r\n                                <li\r\n                                    onClick={() => selectPage(4)}\r\n                                    className='select-page-btns__page-num'\r\n                                >\r\n                                    {currentPage + 4}\r\n                                </li>\r\n                            </>\r\n                        ) : currentPage === 2 ? (\r\n                            <li\r\n                                onClick={() => selectPage(3)}\r\n                                className='select-page-btns__page-num'\r\n                            >\r\n                                {currentPage + 3}\r\n                            </li>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </ul>\r\n\r\n                    <div class='users-page__body'>\r\n                        {users.map((user) => (\r\n                            <UsersPageItem\r\n                                id={user.id}\r\n                                key={user.id}\r\n                                fullname={user.fullname}\r\n                                location={user.location}\r\n                                status={user.status}\r\n                                followed={user.followed}\r\n                                avatar={user.avatar}\r\n                                follow={() => followThunkCreator(user.id)}\r\n                                unfollow={() => unfollowThunkCreator(user.id)}\r\n                                followingInProgressState={() =>\r\n                                    followingInProgressState.some(\r\n                                        (userId) => userId === user.id\r\n                                    ) || !isAuth\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n","import React from \"react\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport { usersAPI } from \"../api/api\";\r\n\r\nclass UsersPageAPIContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThuckCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    selectPage = (pageNum) => {\r\n        this.props.setCurrentPage(this.props.currentPage + pageNum);\r\n        this.props.getUsersThuckCreator(\r\n            this.props.currentPage + pageNum,\r\n            this.props.pageSize\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <UsersPage\r\n                isAuth={this.props.isAuth}\r\n                isFetching={this.props.isFetching}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                selectPage={this.selectPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n                followingInProgressState={this.props.followingInProgressState}\r\n                unfollowThunkCreator={this.props.unfollowThunkCreator}\r\n                followThunkCreator={this.props.followThunkCreator}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersPageAPIContainer;\r\n","export const getUsersSelector = (state) => state.UsersPage.users;\r\nexport const getUsersPageSizeSelector = (state) => state.UsersPage.pageSize;\r\nexport const getTotalUsersCountSelector = (state) => state.UsersPage.totalUsersCount;\r\nexport const getUsersPageCurrentPage = (state) => state.UsersPage.currentPage;\r\nexport const getUsersPageFetchingState = (state) => state.UsersPage.isFetchingData;\r\nexport const getUsersPageFollowingInProgressStatee = (state) =>\r\n    state.UsersPage.followingInProgressState;\r\n","import {\r\n    setUsers,\r\n    setCurrentPage,\r\n    fetching,\r\n    followingInProgress,\r\n    getUsersThuckCreator,\r\n    unfollowThunkCreator,\r\n    followThunkCreator,\r\n} from \"../../redux/reducers/UsersPageReducer\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport UsersPageAPIContainer from \"./UsersPageAPIContainer\"\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\nimport {\r\n    getTotalUsersCountSelector,\r\n    getUsersPageCurrentPage,\r\n    getUsersPageFetchingState,\r\n    getUsersPageFollowingInProgressStatee,\r\n    getUsersPageSizeSelector,\r\n    getUsersSelector,\r\n} from \"../../redux/reducers/selectors/users-selectors\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: getUsersSelector(state),\r\n    pageSize: getUsersPageSizeSelector(state),\r\n    currentPage: getUsersPageCurrentPage(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    isFetching: getUsersPageFetchingState(state),\r\n    followingInProgressState: getUsersPageFollowingInProgressStatee(state),\r\n    isAuth: state.Auth.isAuth,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetching,\r\n    setUsers,\r\n    setCurrentPage,\r\n    followingInProgress,\r\n    getUsersThuckCreator,\r\n    unfollowThunkCreator,\r\n    followThunkCreator,\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersPageAPIContainer)\r\n","export default __webpack_public_path__ + \"static/media/vk.9ce56e3f.svg\";","export default __webpack_public_path__ + \"static/media/youtube.6035ccee.svg\";","export default __webpack_public_path__ + \"static/media/facebook.4aeb301d.svg\";","export default __webpack_public_path__ + \"static/media/twitter.51480627.svg\";","export default __webpack_public_path__ + \"static/media/github.4e195a3b.svg\";","export default __webpack_public_path__ + \"static/media/instagram.787b1447.svg\";","export default __webpack_public_path__ + \"static/media/upload.11c6748a.svg\";","import React from \"react\"\r\nimport { Field } from \"formik\"\r\n\r\nexport default function Checkbox({ name, className }) {\r\n    return (\r\n        <>\r\n            <Field name={name}>\r\n                {({ field }) => {\r\n                    return (\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className={className}\r\n                            checked={field.value}\r\n                            {...field}\r\n                        />\r\n                    )\r\n                }}\r\n            </Field>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Formik, Field } from \"formik\"\r\nimport { Contact, photosIcons } from \"../ProfHeadFuncComponent\"\r\nimport * as yup from \"yup\"\r\nimport MyTextarea from \"../../../common/FormsControl/MyTextarea\"\r\nimport { updateProfInfo } from \"../../../../redux/reducers/ProfileReducer\"\r\nimport \"./ProfHeadForm.scss\"\r\n\r\nimport Checkbox from \"../../../common/FormsControl/FormikCheckbox\"\r\n\r\nconst FormContacts = ({\r\n    contacts,\r\n    className,\r\n    contactClassName,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n}) => {\r\n    return (\r\n        <div class className={className}>\r\n            {Object.keys(contacts)\r\n                .filter((name) => name !== \"website\" && name !== \"mainLink\")\r\n                .map((key) => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <Contact\r\n                                className={contactClassName}\r\n                                forForm={true}\r\n                                icon={photosIcons[key]}\r\n                                link={contacts[key]}\r\n                                name={key}\r\n                            >\r\n                                <div class='prof-form-item__field'>\r\n                                    <MyTextarea\r\n                                        value={values.contacts[key]}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        error={errors[key]}\r\n                                        touched={touched[key]}\r\n                                        name={`contacts.${key}`}\r\n                                        placeholder={`${key}`}\r\n                                        isHorizontal={true}\r\n                                        isInput={true}\r\n                                    />\r\n                                </div>\r\n                            </Contact>\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileHeadForm = (props) => {\r\n    const {\r\n        aboutMe,\r\n        contacts,\r\n        lookingForAJob,\r\n        lookingForAJobDescription,\r\n        fullName,\r\n        onSave,\r\n        userId,\r\n\r\n        updateProfInfo,\r\n    } = props\r\n\r\n    const onSubmit = async (profInfo, userId) => {\r\n        try {\r\n            await updateProfInfo(profInfo, userId)\r\n\r\n            onSave()\r\n        } catch (error) {}\r\n    }\r\n\r\n    const URL =\r\n        /^((https?|ftp):\\/\\/)?(www.)?(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\r\n\r\n    const validationSchema = yup.object().shape({\r\n        FullName: yup\r\n            .string()\r\n            .max(20, \"Max length 20\")\r\n            .required(\"Name required!\"),\r\n        vk: yup.string().matches(URL, \"Enter a valid url\"),\r\n        youtube: yup.string().matches(URL, \"Enter a valid url\"),\r\n        facebook: yup.string().matches(URL, \"Enter a valid url\"),\r\n        twitter: yup.string().matches(URL, \"Enter a valid url\"),\r\n        github: yup.string().matches(URL, \"Enter a valid url\"),\r\n        instagram: yup.string().matches(URL, \"Enter a valid url\"),\r\n    })\r\n    /**\r\n * \"The AboutMe field is required. (AboutMe)\"\r\n1: \"The LookingForAJobDescription field is required. (LookingForAJobDescription)\"\r\n2: \"The FullName field is required. (FullName)\"\r\n\r\n */\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                mainLink: contacts.mainLink || \"\",\r\n                website: contacts.website || \"\",\r\n                FullName: fullName,\r\n                AboutMe: aboutMe || \"\",\r\n                lookingForAJob: lookingForAJob,\r\n                LookingForAJobDescription: lookingForAJobDescription || \"\",\r\n\r\n                contacts: {\r\n                    vk: contacts[\"vk\"] || \"\",\r\n                    youtube: contacts[\"youtube\"] || \"\",\r\n                    facebook: contacts[\"facebook\"] || \"\",\r\n                    twitter: contacts[\"twitter\"] || \"\",\r\n                    github: contacts[\"github\"] || \"\",\r\n                    instagram: contacts[\"instagram\"] || \"\",\r\n                },\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values) => {\r\n                let newValues = { ...values, userId }\r\n\r\n                for (let key in newValues) {\r\n                    if (newValues[key] === \"\") newValues[key] = null\r\n                }\r\n\r\n                for (let key in newValues.contacts) {\r\n                    if (newValues.contacts[key] === \"\")\r\n                        newValues.contacts[key] = null\r\n                }\r\n\r\n                onSubmit(newValues, userId)\r\n            }}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                isValid,\r\n                handleSubmit,\r\n            }) => {\r\n                return (\r\n                    <form onSubmit={handleSubmit} class='profile-head-form'>\r\n                        <div class='profile-head-form__fullname'>\r\n                            <MyTextarea\r\n                                error={errors.FullName}\r\n                                touched={touched.FullName}\r\n                                value={values.FullName}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name='FullName'\r\n                                placeholder='Fullname'\r\n                                isInput={true}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class='profile-head-form__item prof-form-item'>\r\n                            <b class='prof-form-item__title'>About me:</b>\r\n                            <div class='prof-form-item__field'>\r\n                                <MyTextarea\r\n                                    value={values.AboutMe}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name='AboutMe'\r\n                                    placeholder='About yourself'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class='profile-head-form__item prof-form-item'>\r\n                            <b class='prof-form-item__title'>\r\n                                Are you looking for a job now?\r\n                            </b>\r\n\r\n                            <Checkbox\r\n                                className='prof-form-item__check-box'\r\n                                name='lookingForAJob'\r\n                            />\r\n                        </div>\r\n                        <div class='profile-head-form__item prof-form-item'>\r\n                            <b class='prof-form-item__title'>About work: </b>\r\n                            <div class='prof-form-item__field'>\r\n                                <MyTextarea\r\n                                    value={values.LookingForAJobDescription}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name='LookingForAJobDescription'\r\n                                    placeholder='About your work'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <FormContacts\r\n                            values={values}\r\n                            errors={errors}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                            touched={touched}\r\n                            className={\"prof-form-item__contacts\"}\r\n                            contactClassName={\"prof-form-item__contact\"}\r\n                            contacts={contacts}\r\n                        />\r\n\r\n                        <div class='profile-head-form__item prof-form-item'>\r\n                            <b class='prof-form-item__title'>My Website:</b>\r\n                            <div class='prof-form-item__field'>\r\n                                <MyTextarea\r\n                                    value={values.website}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name='website'\r\n                                    placeholder='My Website'\r\n                                    isInput={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class='profile-head-form__item prof-form-item'>\r\n                            <b class='prof-form-item__title'>Main link:</b>\r\n                            <div class='prof-form-item__field'>\r\n                                <MyTextarea\r\n                                    value={values.mainLink}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name='mainLink'\r\n                                    placeholder='Main link'\r\n                                    isInput={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            disabled={!isValid}\r\n                            type='submit'\r\n                            class='profile-head-form__submit prof-head__edit-btn'\r\n                        >\r\n                            Save\r\n                        </button>\r\n                    </form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\nexport default connect(mapStateToProps, { updateProfInfo })(ProfileHeadForm)\r\n","import React from \"react\"\r\nimport vk from \"./img/vk.svg\"\r\nimport youtube from \"./img/youtube.svg\"\r\nimport facebook from \"./img/facebook.svg\"\r\nimport twitter from \"./img/twitter.svg\"\r\nimport github from \"./img/github.svg\"\r\nimport instagram from \"./img/instagram.svg\"\r\nimport uploadIcon from \"./img/upload.svg\"\r\nimport \"./ProfHead.scss\"\r\nimport ProfileHeadForm from \"./ProfHeadForm/ProfileHeadForm\"\r\n\r\nexport const photosIcons = {\r\n    vk,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    github,\r\n    instagram,\r\n}\r\n\r\nexport const ProfileStatus = (props) => {\r\n    const { isMyProfile, updateUserStatus } = props\r\n\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [status, setStatus] = React.useState(props.status)\r\n\r\n    React.useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleStatusEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const inputChangedHandler = (event) => {\r\n        setStatus(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div onDoubleClick={toggleStatusEditMode} class='prof-head__about'>\r\n            <b>Status: </b>\r\n\r\n            <>\r\n                {isMyProfile && editMode ? (\r\n                    <input\r\n                        autoFocus\r\n                        onFocus={(event) => {\r\n                            event.target.select()\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            toggleStatusEditMode()\r\n\r\n                            if (e.currentTarget.value !== props.status) {\r\n                                updateUserStatus(status)\r\n                            }\r\n                        }}\r\n                        value={status}\r\n                        onChange={inputChangedHandler}\r\n                        className='prof-head__about-input'\r\n                    />\r\n                ) : (\r\n                    <span class='prof-head__about-text'>{status}</span>\r\n                )}\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Contact = ({ icon, link, name, forForm, children, className }) => {\r\n    return (\r\n        <div class={className}>\r\n            {!forForm ? (\r\n                <a\r\n                    target='_blank'\r\n                    rel='noreferrer noopener'\r\n                    href={\r\n                        link?.substr(0, 4) == \"http\" ? link : \"http://\" + link\r\n                    }\r\n                >\r\n                    <img draggable={false} src={icon} alt={name} />\r\n                </a>\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <img draggable={false} src={icon} alt={name} />\r\n                    </div>\r\n                    {children}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contacts = ({\r\n    contacts,\r\n    forForm = false,\r\n    contactChild,\r\n    className,\r\n    contactClassName,\r\n}) => {\r\n    return (\r\n        <div class className={className}>\r\n            {contacts &&\r\n                Object.keys(contacts)\r\n                    .filter((name) => name !== \"website\" && name !== \"mainLink\")\r\n                    .map((key) => {\r\n                        if (contacts[key] || forForm)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <Contact\r\n                                        className={contactClassName}\r\n                                        forForm={forForm}\r\n                                        icon={photosIcons[key]}\r\n                                        link={contacts[key]}\r\n                                        name={key}\r\n                                    >\r\n                                        {contactChild}\r\n                                    </Contact>\r\n                                </div>\r\n                            )\r\n                    })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileContacts = ({ contacts, forForm = false }) => {\r\n    return (\r\n        <Contacts\r\n            contacts={contacts}\r\n            contactClassName={\"prof-head__contact\"}\r\n            className={`prof-head__contacts ${\r\n                forForm && \"prof-contacts-in-form\"\r\n            }`}\r\n        />\r\n    )\r\n}\r\n\r\nconst ProfileHeadInfo = (props) => {\r\n    const {\r\n        aboutMe,\r\n        contacts,\r\n        lookingForAJob,\r\n        lookingForAJobDescription,\r\n        fullName,\r\n        userId,\r\n        photos,\r\n        isAuth,\r\n        isMyProfile,\r\n        updateUserStatus,\r\n        updateAvatar,\r\n        status,\r\n        toggleSetFetching,\r\n    } = props\r\n\r\n    return (\r\n        <div class='prof-head__info'>\r\n            <div class='prof-head__fullname'>\r\n                <b>{fullName}</b>\r\n                {isMyProfile && (\r\n                    <button\r\n                        onClick={() => props.setEditMode(true)}\r\n                        class='prof-head__edit-btn'\r\n                    >\r\n                        Edit profile\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <ProfileStatus\r\n                updateUserStatus={updateUserStatus}\r\n                status={status}\r\n                isMyProfile={isMyProfile}\r\n            />\r\n\r\n            <div>\r\n                about me: <i>{aboutMe}</i>\r\n            </div>\r\n\r\n            <div class='prof-head__look-job'>\r\n                <b>Занятость: </b>\r\n                {lookingForAJob ? \"Открыт для ваших предложений\" : \"Работаю\"}\r\n                <div class='prof-head__look-job-desc'>\r\n                    <b>Description: </b>\r\n                    {lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n            <ProfileContacts contacts={contacts} />\r\n\r\n            <div class='prof-head__my-site'>\r\n                {contacts?.website && (\r\n                    <a\r\n                        class='prof-head__contact'\r\n                        target='_blank'\r\n                        href={`${contacts.website}`}\r\n                    >\r\n                        My Website\r\n                    </a>\r\n                )}\r\n                <hr />\r\n                {contacts?.mainLink && (\r\n                    <a\r\n                        class='prof-head__contact'\r\n                        target='_blank'\r\n                        href={`${contacts.mainLink}`}\r\n                    >\r\n                        Main link\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileHeadInfoEdit = (props) => {\r\n    const onSave = () => {\r\n        props.setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div class='prof-head__info prof-head-info-form'>\r\n            <ProfileHeadForm onSave={onSave} {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfHeadFuncComponent = (props) => {\r\n    const { photos, isMyProfile, updateAvatar } = props\r\n\r\n    const [editMode, setEditMode] = React.useState(false)\r\n\r\n    const onAvatarSelected = (e) => {\r\n        if (e.target.files.length !== 0) {\r\n            updateAvatar(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class='prof-head'>\r\n            <div class='prof-head__body'>\r\n                <div class='prof-head__image'>\r\n                    {photos ? <img src={photos.large} /> : \"\"}\r\n                    {isMyProfile && (\r\n                        <>\r\n                            <label class='prof-head__file-upload'>\r\n                                <input\r\n                                    onChange={onAvatarSelected}\r\n                                    type='file'\r\n                                />\r\n                                <img src={uploadIcon} alt='upload' />\r\n                            </label>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                {editMode && isMyProfile ? (\r\n                    <ProfileHeadInfoEdit {...props} setEditMode={setEditMode} />\r\n                ) : (\r\n                    <ProfileHeadInfo {...props} setEditMode={setEditMode} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// id test user : 19706\r\n\r\nexport default ProfHeadFuncComponent\r\n","import React from \"react\"\r\nimport ProfHeadFuncComponent from \"./ProfHead/ProfHeadFuncComponent\"\r\nimport \"./Profile.scss\"\r\n\r\nconst Profile = (props) => (\r\n    <div class='profile'>\r\n        <div class='profile__grid'>\r\n            <ProfHeadFuncComponent\r\n                {...props.userProfileData}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n                updateAvatar={props.updateAvatar}\r\n                isMyProfile={props.isMyProfile}\r\n                isAuth={props.isAuth}\r\n                toggleSetFetching={props.toggleSetFetching}\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Profile\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport Profile from \"./Profile\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport {\r\n    getUserPersonDataThunkCreator,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    updateAvatarTC,\r\n    toggleSetFetching,\r\n} from \"../../redux/reducers/ProfileReducer\"\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        this.props.getUserPersonDataThunkCreator(this.props.match.params.userId)\r\n        this.props.getUserStatus(this.props.match.params.userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Preloader loading={this.props.Profile.isFetching} />\r\n\r\n                <Profile\r\n                    toggleSetFetching={this.props.toggleSetFetching}\r\n                    updateAvatar={this.props.updateAvatarTC}\r\n                    updateUserStatus={this.props.updateUserStatus}\r\n                    userProfileData={this.props.Profile.userProfileData}\r\n                    status={this.props.Profile.status}\r\n                    isAuth={this.props.isAuth}\r\n                    isMyProfile={\r\n                        this.props.myId == this.props.match.params.userId\r\n                    }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Profile: state.Profile,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getUserPersonDataThunkCreator,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    updateAvatarTC,\r\n    toggleSetFetching,\r\n}\r\n//const uslId =\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)\r\n","import React from \"react\"\r\nimport MyTextarea from \"../common/FormsControl/MyTextarea\"\r\nimport Checkbox from \"../common/FormsControl/FormikCheckbox\"\r\nimport {\r\n    loginThunkCreator,\r\n    logoutThunkCreator,\r\n} from \"../../redux/reducers/AuthReducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { Formik } from \"formik\"\r\nimport * as yup from \"yup\"\r\nimport \"./Login.scss\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\n\r\nconst LoginForm = ({ onSubmitLogin, captchaUrl }) => {\r\n    const validationSchema = yup.object().shape({\r\n        login: yup\r\n            .string()\r\n            .email(\"Invalid email\")\r\n            .max(30, \"Too Long!\")\r\n            .required(\"Is required!\"),\r\n        password: yup\r\n            .string()\r\n            .typeError(\"Должно быть строкой\")\r\n            .min(5, \"Too Short!\")\r\n            .max(20, \"Too Long!\")\r\n            .required(\"Is required!\"),\r\n        captcha: yup.string(),\r\n    })\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                login: \"\",\r\n                password: \"\",\r\n                remeberMe: false,\r\n                captcha: \"\",\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values) => onSubmitLogin(values)}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                isValid,\r\n                handleSubmit,\r\n                dirty,\r\n            }) => {\r\n                return (\r\n                    <form onSubmit={handleSubmit} class='login__form'>\r\n                        <div class='login__input-login'>\r\n                            <MyTextarea\r\n                                value={values.login}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={errors.login}\r\n                                touched={touched.login}\r\n                                name='login'\r\n                                type='text'\r\n                                placeholder='login'\r\n                                isHorizontal={true}\r\n                                isInput={true}\r\n                            />\r\n                        </div>\r\n                        <div class='login__input-password'>\r\n                            <MyTextarea\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={errors.password}\r\n                                touched={touched.password}\r\n                                name='password'\r\n                                type='password'\r\n                                placeholder='password'\r\n                                isHorizontal={true}\r\n                                isInput={true}\r\n                            />\r\n                        </div>\r\n                        <div class='login__remember-me'>\r\n                            <Checkbox name='rememberMe' />\r\n                            remember me\r\n                        </div>\r\n\r\n                        {captchaUrl && (\r\n                            <>\r\n                                <div class='login__captcha'>\r\n                                    <img\r\n                                        class='login__captcha-img'\r\n                                        src={captchaUrl}\r\n                                        alt='captcha'\r\n                                    />\r\n                                </div>\r\n                                <div class='login__input-password input-captcha'>\r\n                                    <MyTextarea\r\n                                        onBlur={handleBlur}\r\n                                        value={values.captcha}\r\n                                        onChange={handleChange}\r\n                                        name='captcha'\r\n                                        placeholder='captcha'\r\n                                        isHorizontal={true}\r\n                                        isInput={true}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <button\r\n                            disabled={!isValid || !dirty}\r\n                            type='submit'\r\n                            class='login-btn'\r\n                        >\r\n                            Sign-in\r\n                        </button>\r\n                    </form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        captcha,\r\n        isAuth,\r\n        authError,\r\n        loginThunkCreator,\r\n        logoutThunkCreator,\r\n    } = props\r\n\r\n    const onSubmitLogin = (values) => {\r\n        const { login, password, remeberMe, captcha } = values\r\n        loginThunkCreator(login, password, remeberMe, captcha)\r\n    }\r\n\r\n    return (\r\n        <div class='login'>\r\n            <h1 class='login__title'>Login</h1>\r\n            <LoginForm captchaUrl={captcha} onSubmitLogin={onSubmitLogin} />\r\n            <div className='login__error-label'>{authError}</div>\r\n            <div className='login__balls login-balls'>\r\n                <div className='login-balls__ball1' />\r\n                <div className='login-balls__ball2' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    authError: state.Auth.authError,\r\n    captcha: state.Auth.captcha,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginThunkCreator,\r\n    logoutThunkCreator,\r\n})(Login)\r\n","import React, { useEffect } from \"react\"\r\nimport { HashRouter, Route } from \"react-router-dom\"\r\nimport { Switch, Redirect } from \"react-router\"\r\nimport { connect } from \"react-redux\"\r\nimport HeaderContainer from \"./Header/HeaderContainer\"\r\nimport Sidebar from \"./Sidebar/Sidebar\"\r\nimport News from \"./News/News\"\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\"\r\nimport UsersPageContainer from \"./UsersPage/UsersPageContainer\"\r\nimport ProfileContainer from \"./Profile/ProfileContainer\"\r\nimport Login from \"./Login/Login\"\r\nimport Preloader from \"./common/Preloader/Preloader\"\r\nimport { initializeApp } from \"../redux/reducers/AppReducer\"\r\nimport \"../style/app.scss\"\r\n//\r\nimport \"./api/newsApi\"\r\n//\r\nconst App = (props) => {\r\n    const { initialized, initializeApp, isAuth } = props\r\n\r\n    useEffect(initializeApp, [initializeApp])\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div class='app'>\r\n                <Preloader loading={!initialized} />\r\n                <HeaderContainer\r\n                    className={initializeApp && \"started-header\"}\r\n                />\r\n                {isAuth && <Sidebar />}\r\n                <div class='app__content'>\r\n                    {isAuth ? (\r\n                        <Switch>\r\n                            <Route\r\n                                path='/profile/:userId?'\r\n                                render={() => <ProfileContainer />}\r\n                            />\r\n                            <Route\r\n                                path='/dialogs'\r\n                                exact\r\n                                render={() => <DialogsContainer />}\r\n                            />\r\n                            <Route\r\n                                path='/users'\r\n                                exact\r\n                                render={() => <UsersPageContainer />}\r\n                            />\r\n                            <Route path='/news' exact render={() => <News />} />\r\n                            <Redirect to='/news' />\r\n                        </Switch>\r\n                    ) : (\r\n                        <Switch>\r\n                            <Route path='/login' render={() => <Login />} />\r\n                            <Redirect to='/login' />\r\n                        </Switch>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.App.initialize,\r\n    isAuth: state.Auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App)\r\n","import React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport \"../src/index.scss\"\r\n\r\nimport reduxStore from \"./redux/reduxStore\"\r\nimport App from \"./components/App\"\r\n\r\nrender(\r\n    <Provider store={reduxStore}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}